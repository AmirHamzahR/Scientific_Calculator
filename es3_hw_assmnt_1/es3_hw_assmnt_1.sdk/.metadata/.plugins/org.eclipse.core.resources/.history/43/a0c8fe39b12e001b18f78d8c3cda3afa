/*
	Author : s1945267		File : seg7_display.c
*/
#ifndef __SEG7_DISPLAY_H_
#define __SEG7_DISPLAY_H_

#include "xgpio.h"		// Added for xgpio object definitions

// Definitions for 7-segment BCD codes
#define DIGIT_BLANK		0xFF
#define DIGIT_ZERO 		0xC0
#define DIGIT_ONE  		0xF9
#define DIGIT_TWO  		0xA4
#define DIGIT_THREE  	0xB0
#define DIGIT_FOUR  	0x99
#define DIGIT_FIVE  	0x92
#define DIGIT_SIX  		0x82
#define DIGIT_SEVEN  	0xF8
#define DIGIT_EIGHT  	0x80
#define DIGIT_NINE  	0x90
#define DIGIT_DASH  	0xBF
#define DIGIT_A			0xFE
#define DIGIT_B			0xFD
#define DIGIT_C			0xFB
#define DIGIT_D			0xF7
#define DIGIT_E			0xEF
#define DIGIT_F			0xDF
#define DIGIT_DP        0x7F // DECIMAL POINT

#define NUMBER_BLANK  	20 	// Note: since 10 cannot be a digit,
 						   	//       it is used to represent a blank digit
#define NUMBER_DASH  	100 	// Note: since 11 cannot be a digit,
 						   	//       it is used to represent "dash"

// Definitions for digit selection codes
#define EN_FIRST_SEG	0b0111
#define EN_SECOND_SEG	0b1011
#define EN_THIRD_SEG	0b1101
#define EN_FOURTH_SEG	0b1110

void print(char *str);

int setUpInterruptSystem();			// function declaration for interrupt system
void hwTimerISR(void *CallbackRef);
void displayNumber(s16 );		  	// define displayNumber function (s16 used for signed values)
void calculateDigits(u16 number); 	// define calculateDigits() function
void displayDigit();

#endif
